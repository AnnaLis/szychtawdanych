barplot(eigen(cov(t(UrineSpectra[[1]])), only.values = TRUE)$values)
barplot(eigen(cov((UrineSpectra[[1]])), only.values = TRUE)$values)
library(ggplot2)
data <- data.frame(id=1:18, score=mlcc.fit$factors[[1]], groups=as.factor(group))
ggplot(data, aes(x=id,y=X1.1, col=groups)) + geom_point() + geom_abline(slope=0,intercept=-2) +
xlab("Index") + ylab("Factor scores") +
scale_color_discrete("Groups")
group <- UrineSpectra[[2]]$TreatmentGroup
gpnames <- levels(as.factor(group))
plot(mlcc.fit$factors[[1]], pch = rep(16:26)[group],  col = group, ylab = "Factor score")
legend("topright", bty = "n", paste("Group ", c(gpnames), sep = ""),
col = group, lty = rep(0, length(gpnames)), pch = rep(16:26))
abline(h=-2)
mlcc.fit <- varclust::mlcc.bic((UrineSpectra[[1]]), numb.clusters = 1:2, numb.runs = 50, max.dim = 8, verbose = TRUE)
group <- UrineSpectra[[2]]$TreatmentGroup
gpnames <- levels(as.factor(group))
plot(mlcc.fit$factors[[1]], pch = rep(16:26)[group],  col = group, ylab = "Factor score")
legend("topright", bty = "n", paste("Group ", c(gpnames), sep = ""),
col = group, lty = rep(0, length(gpnames)), pch = rep(16:26))
abline(h=-2)
data <- data.frame(id=1:18, score=mlcc.fit$factors[[1]], groups=as.factor(group))
ggplot(data, aes(x=id,y=X1.1, col=groups)) + geom_point() + geom_abline(slope=0,intercept=-2) +
xlab("Index") + ylab("Factor scores") +
scale_color_discrete("Groups")
ggplot(data, aes(x=id,y=X1.1, col=groups)) + geom_point() + geom_abline(slope=0,intercept=-2) +
xlab("Index") + ylab("Factor scores") +
scale_color_discrete("Groups") +
scale_size(guides=FALSE, range=c(9,9))
ggplot(data, aes(x=id,y=X1.1, col=groups)) + geom_point() + geom_abline(slope=0,intercept=-2) +
xlab("Index") + ylab("Factor scores") +
scale_color_discrete("Groups") +
scale_size(guide=FALSE, range=c(9,9))
ggplot(data, aes(x=id,y=X1.1, col=groups)) + geom_point() + geom_abline(slope=0,intercept=-2) +
xlab("Index") + ylab("Factor scores") +
scale_color_discrete("Groups") +
scale_size(guide=FALSE, range=c(9,9))
ggplot(data, aes(x=id,y=X1.1, col=groups, size=10)) + geom_point() + geom_abline(slope=0,intercept=-2) +
xlab("Index") + ylab("Factor scores") +
scale_color_discrete("Groups") +
scale_size(guide=FALSE, range=c(9,9))
ggplot(data, aes(x=id,y=X1.1, col=groups, size=10)) + geom_point() + geom_abline(slope=0,intercept=-2) +
xlab("Index") + ylab("Factor scores") +
scale_color_discrete("Groups") +
scale_size(guide=FALSE, range=c(9,9)) +
theme(panel.background=element_rect(fill="white"),
axis.text=element_text(size=15),
axis.title=element_text(size=30),
legend.text = element_text(family = "Impact", size = 14))
ggplot(data, aes(x=id,y=X1.1, col=groups, size=10)) + geom_point() + geom_abline(slope=0,intercept=-2) +
xlab("Index") + ylab("Factor scores") +
scale_color_discrete("Groups") +
scale_size(guide=FALSE, range=c(9,9)) +
theme(panel.background=element_rect(fill="white"),
axis.text=element_text(size=15),
axis.title=element_text(size=30),
legend.text = element_text(size = 14),
legend.key = element_rect(size=10))
ggplot(data, aes(x=id,y=X1.1, col=groups, size=10)) + geom_point() + geom_abline(slope=0,intercept=-2) +
xlab("Index") + ylab("Factor scores") +
scale_color_discrete("Groups") +
scale_size(guide=FALSE, range=c(9,9)) +
theme(panel.background=element_rect(fill="white"),
axis.text=element_text(size=15),
axis.title=element_text(size=30),
legend.text = element_text(size = 14),
legend.key = element_rect(size=10),
legend.title= element_text(size = 14))
ggplot(data, aes(x=id,y=X1.1, col=groups, size=10)) + geom_point() + geom_abline(slope=0,intercept=-2) +
xlab("Index") + ylab("Factor scores") +
scale_color_discrete("Groups") +
scale_size(guide=FALSE, range=c(9,9)) +
theme(panel.background=element_rect(fill="white"),
axis.text=element_text(size=15),
axis.title=element_text(size=30),
legend.text = element_text(size = 14),
legend.title= element_text(size = 14))
ggplot(data, aes(x=id,y=X1.1, col=groups, size=10)) + geom_point() + geom_abline(slope=0,intercept=-2) +
xlab("Index") + ylab("Factor scores") +
scale_color_discrete("Groups") +
scale_size(guide=FALSE, range=c(9,9)) +
theme(panel.background=element_rect(fill="white"),
axis.text=element_text(size=15),
axis.title=element_text(size=30),
legend.text = element_text(size = 20),
legend.title= element_text(size = 24))
ggplot(agg, aes(x=wiek_kat, y=waga, fill=zadowolenie)) +
geom_bar(stat="identity", position="fill") + facet_wrap(~plec+rok) +
theme(legend.position="top") +
scale_fill_manual(name="",
values=c(main_color, "chartreuse3", "gray")) +
scale_y_continuous(labels = percent) +
ylab("Procent osób") + xlab("Wiek") + myTheme
agregat <-
osoby[,c("ap4", "PLEC", "WAGA_2013_OSOBY", "WIEK6_2013")] %>%
group_by(ap4, PLEC, WIEK6_2013) %>%
summarise(waga = sum(WAGA_2013_OSOBY, na.rm=TRUE)) %>%
na.omit()
names(agregat) <- c("zadowolenie", "plec", "wiek_kat", "waga")
library(ggplot2)
library(dplyr)
library(Diagnoza)
agregat <-
osoby[,c("ap4", "PLEC", "WAGA_2013_OSOBY", "WIEK6_2013")] %>%
group_by(ap4, PLEC, WIEK6_2013) %>%
summarise(waga = sum(WAGA_2013_OSOBY, na.rm=TRUE)) %>%
na.omit()
names(agregat) <- c("zadowolenie", "plec", "wiek_kat", "waga")
agregat2003 <-
osoby[,c("fp4", "PLEC", "WAGA_2003_OSOBY", "wiek6_2003")] %>%
group_by(fp4, PLEC, wiek6_2003) %>%
summarise(waga = sum(WAGA_2003_OSOBY, na.rm=TRUE)) %>%
na.omit()
names(agregat2003) <- c("zadowolenie", "plec", "wiek_kat", "waga")
agregat2003 <- agregat2003 %>% filter(wiek_kat!="do 24 lat")
agg <- rbind(cbind(agregat, rok="2013"),
cbind(agregat2003, rok="2003"))
levels(agg$zadowolenie) <- c(rep(levels(agg$zadowolenie)[1:3],2), "Trudno powiedzieć")
background <- "white"
main_color <- rgb(red=197, green=38, blue=36, maxColorValue = 255)
blue_pis = rgb(red=7, green=58, blue=118, maxColorValue = 255)
white <-  "#FFFFFF"
grid <- "grey"
labels <- "black"
myTheme <- theme(
legend.position = "top",
legend.direction = "horizontal", legend.box = "vertical",
legend.title = element_text(family = "Impact",  face = "italic", colour = main_color, size = 15),
legend.background = element_rect(fill = background),
legend.key = element_rect(fill = background, colour = background),
legend.text = element_text(family = "Impact", colour = labels, size = 14),
plot.background = element_rect(fill = background, colour = background),
panel.background = element_rect(fill = background),
panel.background = element_rect(fill = "white",colour = grid),
axis.text = element_text(colour = labels, family = "Impact"),
plot.title = element_text(colour = main_color, face = "bold.italic", size = 28,
vjust = 1, family = "Impact"),
axis.title = element_text(colour = main_color, face = "italic", size = 20, family = "Impact"),
axis.title.x = element_text(colour = main_color, face = "italic", size = 20, family = "Impact"),
panel.grid.major.y = element_line(colour = grid),
panel.grid.minor.y = element_blank(),
panel.grid.major.x = element_line(colour = grid),
panel.grid.minor.x = element_blank(),
strip.text.x = element_text(family = "Impact", colour = main_color, size=12),
strip.text.y = element_text(size=12, face="bold"),
strip.background = element_rect(colour=main_color, fill="white"),
axis.ticks = element_line(colour = labels))
ggplot(agg, aes(x=wiek_kat, y=waga, fill=zadowolenie)) +
geom_bar(stat="identity", position="fill") + facet_wrap(~plec+rok) +
theme(legend.position="top") +
scale_fill_manual(name="",
values=c(main_color, "chartreuse3", "gray")) +
scale_y_continuous(labels = percent) +
ylab("Procent osób") + xlab("Wiek") + myTheme
library(scales)
ggplot(agg, aes(x=wiek_kat, y=waga, fill=zadowolenie)) +
geom_bar(stat="identity", position="fill") + facet_wrap(~plec+rok) +
theme(legend.position="top") +
scale_fill_manual(name="",
values=c(main_color, "chartreuse3", "gray")) +
scale_y_continuous(labels = percent) +
ylab("Procent osób") + xlab("Wiek") + myTheme
X <- read.csv("Dropbox/doktorat/moje_prace/cps/XMat.csv")
library(SLOPE)
beta = sqrt(5*log(ncol(X)))
columns <- sample(1:ncol(X), 10)
y <- X[,columns]%*%rep(beta, 10) + rnorm(90)
beta = sqrt(5*log(ncol(X)))
columns <- sample(1:ncol(X), 10)
y <- X[,columns]%*%rep(beta, 10) + rnorm(90)
rep(beta, 10)
X[,columns]
y <- X[,columns]%*%t(rep(beta, 10)) + rnorm(90)
y <- X[,columns]%*%matrix(rep(beta, 10),ncol=1) + rnorm(90)
matrix(rep(beta, 10),ncol=1)
dim(X[,columns])
X[,columns]%*%matrix(rep(beta, 10),ncol=1)
str(X)
y <- as.matrix(X[,columns])%*%matrix(rep(beta, 10),ncol=1) + rnorm(90)
slopeResult <- SLOPE(X = X, y = y, fdr = 0.05)
columns <- c(10695,  7472,  5524, 20213, 3785,  6497, 17280, 15461,  2947,  4379)
y <- as.matrix(X[,columns])%*%matrix(rep(beta, 10),ncol=1) + rnorm(90)
slopeResult <- SLOPE(X = X, y = y, fdr = 0.05)
X <- read.csv("Dropbox/doktorat/moje_prace/cps/XMat.csv")
beta = sqrt(5*log(ncol(X)))
columns <- c(10695,  7472,  5524, 20213, 3785,  6497, 17280, 15461,  2947,  4379)
y <- as.matrix(X[,columns])%*%matrix(rep(beta, 10),ncol=1) + rnorm(90)
slopeResult <- SLOPE(X = X, y = y, fdr = 0.05)
as.matrix(X[,columns])%*%matrix(rep(beta, 10),ncol=1)
columns <- c(10695,  7472,  5524, 20213, 3785,  6497, 17280, 15461,  2947,  4379)
columns
beta
dim(X)
X <- read.csv("Dropbox/doktorat/moje_prace/cps/XMat.csv", row.names = 1)
X <- read.csv("Dropbox/doktorat/moje_prace/cps/XMat.csv", row.names = 1)
beta = sqrt(5*log(ncol(X)))
beta
columns <- c(10695,  7472,  5524, 20213, 3785,  6497, 17280, 15461,  2947,  4379)
y <- as.matrix(X[,columns])%*%matrix(rep(beta, 10),ncol=1) + rnorm(90)
slopeResult <- SLOPE(X = X, y = y, fdr = 0.05)
set.seed(1)
y <- as.matrix(X[,columns])%*%matrix(rep(beta, 10),ncol=1) + rnorm(90)
slopeResult <- SLOPE(X = X, y = y, fdr = 0.05)
source('~/Dropbox/doktorat/moje_prace/variables_clustering/reports/estimating_number_pcs/simulating_pcs.R')
n <- 200
vars <- 20
results <- list()
library(pryr)
SNRs <- c(0.5)
# vars <- 100*2^(0:1)
# n <- vars
numb.repetitions <- 3
k <- 5
n <- 200
vars <- 20
results <- list()
sim.data <- data.simulation.model(n, 1, vars, k)
sim.data
dim(sim.data$X)
dim(sim.data$signals)
results[["fixed_big_n"]] =
compare_methods(partial(data.fixed.model, object=sim.data),
numb.repetitions = numb.repetitions,
n = n, SNRs = SNRs, vars = vars, k = k, scale = TRUE)
results
results/3
lapply(results, function(x) x/3
)
lapply(results[[1]], function(x) x/3)
sim.data <- data.simulation(n=100, SNR = .5, K = 1, numb.vars = 200, max.dim = 5)
X <- sim.data$X
prcomp.fit <- prcomp(X)
princomp.fit <- princomp(X)
svd.fit <- svd(X)
head(prcomp.fit$sdev)
head(svd.fit$d)/199*20
head(svd.fit$d)
svd.fit <- svd(t(X)%*%X)
head(svd.fit$d)
sqrt(head(svd.fit$d))
head(prcomp.fit$sdev)
sqrt(head(svd.fit$d))
svd.fit <- svd(t(X)%*%X/99)
sqrt(head(svd.fit$d))
head(prcomp.fit$sdev)
X_scaled <- scale(X)
prcomp.result.scaled <- prcomp(X_scaled)
prcomp.result$sdev
prcomp.result.scaled$sdev
svd.cov.result <- svd(cov(X))
svd.cor.result <- svd(cor(X))
head(prcomp.result.scaled$sdev)
head(sqrt(svd.cor.result$d))
X <- data.simulation(100, 1, 1, 50, 5)$X
prcomp.result <- prcomp(X)
names(prcomp.result)
princomp.result <- princomp(X)
names(princomp.result)
svd.cov.result <- svd(cov(X))
svd.cor.result <- svd(cor(X))
pca.func.results <- cbind(
princomp=princomp.result$sdev,
prcomp=prcomp.result$sdev,
svd.cov=sqrt(svd.cov.result$d),
svd.cor=sqrt(svd.cor.result$d)
)
head(pca.func.results)
X_scaled <- scale(X)
prcomp.result.scaled <- prcomp(X_scaled)
head(prcomp.result.scaled$sdev)
head(sqrt(svd.cor.result$d))
svd.cov2.result <- svd(cov(X)*99/100)
head(sqrt(svd.cov2.result$d))
head(princomp.result$sdev)
head(svd(X)$d)
head(svd.cov/99)
head(svd.cov.result/99)
head(sqrt(svd.cor.result$d)/99)
head(svd(X)$d)
head(svd(X)$d)
head(sqrt(svd.cor.result$d/99))
head(sqrt(svd.cor.result$d*99))
head(svd(X)$d)
head(sqrt(svd.cor.result$d*99))
head(svd.cor.result$d)
head(svd(X)$d)
head(svd(X)$d)^2/99
head(svd.cor.result$d)
head(svd(X)$d)^2/99
head(svd.cor.result$d)
head(svd(X)$d)^2/199
head(svd(X)$d)
head(svd(cov(X)$d)
head(svd(cov(X)$d))
head(svd(cov(X)$d))
head(svd(X)$d)
head(svd(cov(X))$d)
head(svd(t(X)%*%X)$d)
sqrt(head(svd(t(X)%*%X)$d))
head(svd(X)$d)^2
head(svd(X)$d)^2/99
sqrt(head(svd(t(X)%*%X/99)$d))
head(svd(cov(X))$d)
head(svd(X)$d)^2/100
head(svd(cov(X))$d)
head(svd(X)$d)^2/99
head(svd(cov(X))$d)
head(svd(X)$d)^2/99/head(svd(cov(X))$d)
head(svd(t(X)%*%X/99)$d)
head(svd(X)$d)^2/99
head(svd(cov(X))$d)
head(svd(t(X)%*%X/99)$d)
sum((cov(X)-t(X)%*%X/99)^2)
sum((cov(X)-t(X)%*%X/99)^2)/prod(dim(X))
sum((cov(X)-t(X)%*%X/100)^2)/prod(dim(X))
sum((cov(X)-t(X)%*%X/100)^2)
cov
prcomp.result$rotation
prcomp.result$rotation[,1]
svd.cov.result$v[,1]
rbind(prcomp=prcomp.result$rotation[,1],
svd.cov=svd.cov.result$v[,1])
loadings <- rbind(prcomp=prcomp.result$rotation[,1],
svd.cov=svd.cov.result$v[,1])
head(loadings)
loadings <- cbind(prcomp=prcomp.result$rotation[,1],
svd.cov=svd.cov.result$v[,1])
head(loadings)
prcomp.result$sdev
prcomp.result$center
prcomp.result$scale
prcomp.result$x
prcomp.result$x[,1]
head(prcomp.result$x[,1])
dim(prcomp.result$x)
head(prcomp.result$x[,1])
var(prcomp.result$x[,1])
sd(prcomp.result$x[,1])
head(prcomp.result$sdev)
head(svd.cov.result$u%*%svd.cov.result$d)
head((svd.cov.result$u%*%svd.cov.result$d)[,1])
head(prcomp.result$x[,1])
head((svd.cov.result$u%*%svd.cov.result$d)[,1])
head(svd.cov.result$u[,1]*svd.cov.result$d[1])
sd(svd.cov.result$u[,1]*svd.cov.result$d[1])
sum(svd.cov.result$u-t(svd.cov.result$u))
sd(svd(X)$u[,1]*svd.cov.result$d[1])
sd(svd(X)$u[,1]*svd(X)$d[1])
head(svd(X)$u[,1]*svd(X)$d[1])
head(prcomp.result$x[,1])
head(svd(X)$u[,1]*svd(X)$d[1])
SNRs <- seq(0.25, 1.5, 0.25)
SNRs
Sys.Date()
2^(-2:2)
args <- character(0)
if(identical(args, character(0))) args <- c("")
print(args[1])
f12 <- (14.6, 17.4)
f12 <- c(14.61, 17.40)
f18 <- c(34.41, 40.51)
f21 <- c(49.96, 55.34)
f21/f12
f21/f18
f12 <- c(14.60, 14.61, 17.40)
f18 <- c(39.28, 34.41, 40.51)
f21 <- c(47.40, 49.96, 55.34)
wybory.lm <- lm(f21~f12+f18)
summary(wybory.lm)
f12 <- c(14.60, 14.61, 17.40)
f18 <- c(39.28, 34.41, 40.51)
f21 <- c(47.40, 49.96, 55.34)
wybory.lm <- lm(f21~f12+f18)
summary(wybory.lm)
f21
wybory.lm <- lm(f21~f12)
summary(wybory.lm)
predict(wybory.lm, new)
?predict
predict(wybory.lm, data.frame(new))
f12 <- c(14.60, 14.61, 17.40)
f17 <- c(39.28, 34.41, 40.51)
f21 <- c(47.40, 49.96, 55.34)
wybory.dane <- data.frame(f12, f17, f21)
wybory.lm <- lm(f21~f12, wybory.dane)
summary(wybory.lm)
new <- data.frame(f12=16.47)
new
predict(wybory.lm, new)
wybory.dane <- rbind(wybory.dane, new)
wybory.dane <- data.frame(f12, f17, f21)
new <- data.frame(f12=16.47, f17=38.97, f21=51)
wybory.dane <- rbind(wybory.dane, new)
wybory.lm <- lm(f21~f12, wybory.dane)
summary(wybory.lm)
wybory.lm <- lm(f21~f12+f17, wybory.dane)
summary(wybory.lm)
predict(wybory.lm, new)
setwd("~/szychta_w_danych/dentysci_w_szkolach/")
szkoly <- read.csv(file = "00003.csv", skip = 7)
head(szkoly)
szkoly <- read.csv(file = "00003.csv", skip = 7)
head(szkoly)
szkoly <- read.csv(file = "00003.csv", skip = 7, stringsAsFactors = FALSE)
head(szkoly)
summary(szkoly)
library(dplyr)
colnames(szkoly)
szkoly %>%
filter(Spec..szkoły==100,
Związ..organiz.==100,
Publiczność==1) -> szkoly_publiczne
summary(szkoly_publiczne$Uczniowie..wychow...słuchacze)
szkoly_publiczne$Uczniowie..wychow...słuchacze <- as.numeric(szkoly_publiczne$Uczniowie..wychow...słuchacze)
summary(szkoly_publiczne$Uczniowie..wychow...słuchacze)
szkoly <- read.csv(file = "00003.csv", skip = 7, stringsAsFactors = FALSE)
szkoly %>%
filter(Spec..szkoły==100,
Związ..organiz.==100,
Publiczność==1) -> szkoly_publiczne
szkoly <- read.csv(file = "00003.csv", skip = 6, stringsAsFactors = FALSE)
szkoly %>%
filter(Spec..szkoły==100,
Związ..organiz.==100,
Publiczność==1) -> szkoly_publiczne
szkoly_publiczne$Uczniowie..wychow...słuchacze <- as.numeric(szkoly_publiczne$Uczniowie..wychow...słuchacze)
summary(szkoly_publiczne$Uczniowie..wychow...słuchacze)
2016 - -168 - 176 - 76 - 84
godzin_pracy = 2016 - -168 - 176 - 76 - 84
summary(szkoly_publiczne$Uczniowie..wychow...słuchacze*2>godzin_pracy)
summary(szkoly_publiczne$Uczniowie..wychow...słuchacze*4>godzin_pracy)
summary(szkoly_publiczne$Uczniowie..wychow...słuchacze>500)
szkoly_publiczne %>%
group_by(Miejscowość) %>%
sum(Uczniowie..wychow...słuchacze)
szkoly_publiczne %>%
group_by(Miejscowość) %>%
sum(Uczniowie..wychow...słuchacze)
szkoly_publiczne %>%
group_by(Miejscowość) %>%
summarise(sum(Uczniowie..wychow...słuchacze))
szkoly_publiczne %>%
group_by(Miejscowość) %>%
summarise(sum(Uczniowie..wychow...słuchacze)) -> miejscowosci_uczniowie
summary(miejscowosci_uczniowie$`sum(Uczniowie..wychow...słuchacze)`>500)
summary(miejscowosci_uczniowie$`sum(Uczniowie..wychow...słuchacze)`>200)
summary(szkoly_publiczne$Uczniowie..wychow...słuchacze>200)
summary(szkoly_publiczne$Uczniowie..wychow...słuchacze)
summary(szkoly_publiczne$Uczniowie..wychow...słuchacze*4>godzin_pracy)
summary(3*miejscowosci_uczniowie$`sum(Uczniowie..wychow...słuchacze)`>godzin_pracy)
summary(4*miejscowosci_uczniowie$`sum(Uczniowie..wychow...słuchacze)`>godzin_pracy)
szkoly_publiczne %>%
group_by(gm) %>%
summarise(sum(Uczniowie..wychow...słuchacze)) -> miejscowosci_uczniowie
summary(4*miejscowosci_uczniowie$`sum(Uczniowie..wychow...słuchacze)`>godzin_pracy)
szkoly$teryt = paste0(szkoly$woj, szkoly$pow, szkoly$gm)
szkoly_publiczne %>%
group_by(teryt) %>%
summarise(sum(Uczniowie..wychow...słuchacze)) -> miejscowosci_uczniowie
szkoly %>%
filter(Spec..szkoły==100,
Związ..organiz.==100,
Publiczność==1) -> szkoly_publiczne
szkoly_publiczne$Uczniowie..wychow...słuchacze <- as.numeric(szkoly_publiczne$Uczniowie..wychow...słuchacze)
summary(szkoly_publiczne$Uczniowie..wychow...słuchacze)
godzin_pracy = 2016 -168 - 176 - 76 - 84
godzin_pracy
summary(szkoly_publiczne$Uczniowie..wychow...słuchacze*4>godzin_pracy)
szkoly_publiczne %>%
group_by(teryt) %>%
summarise(sum(Uczniowie..wychow...słuchacze)) -> miejscowosci_uczniowie
summary(4*miejscowosci_uczniowie$`sum(Uczniowie..wychow...słuchacze)`>godzin_pracy)
summary(szkoly_publiczne$Uczniowie..wychow...słuchacze*4/godzin_pracy)
sum(szkoly_publiczne$Uczniowie..wychow...słuchacze*4/godzin_pracy)
sum(max(szkoly_publiczne$Uczniowie..wychow...słuchacze*4/godzin_pracy,1))
sum(pmax(szkoly_publiczne$Uczniowie..wychow...słuchacze*4/godzin_pracy,1))
sum(pmin(szkoly_publiczne$Uczniowie..wychow...słuchacze*4/godzin_pracy,1))
nrow(szkoly_publiczne)
potrzebne_etaty = sum(pmin(szkoly_publiczne$Uczniowie..wychow...słuchacze*4/godzin_pracy,1))
nrow(szkoly_publiczne)-potrzebne_etaty
koszt_gabinetu = 1e5
koszt_gabinetu*(nrow(szkoly_publiczne)-potrzebne_etaty)
summary(szkoly_publiczne$Uczniowie..wychow...słuchacze*4>godzin_pracy)
summary(szkoly_publiczne$Uczniowie..wychow...słuchacze*4>/godzin_pracy)
summary(szkoly_publiczne$Uczniowie..wychow...słuchacze*4>/godzin_pracy)
summary(szkoly_publiczne$Uczniowie..wychow...słuchacze*4/godzin_pracy)
potrzebne_etaty*6000*12
potrzebne_etaty*8000*12
potrzebne_etaty
koszt_gabinetu*(nrow(szkoly_publiczne)-potrzebne_etaty)
summary(szkoly_publiczne$Uczniowie..wychow...słuchacze*4>godzin_pracy)
2039/11693
summary(szkoly_publiczne$Uczniowie..wychow...słuchacze*4/godzin_pracy)
100000*11000
potrzebne_etaty
koszt_gabinetu*(nrow(szkoly_publiczne)-potrzebne_etaty)
colnames(szkoly_publiczne)
szkoly_publiczne %>%
group_by(Klasa.wielk.) %>%
summarise(summary)
szkoly_publiczne %>%
group_by(Klasa.wielk.) %>%
summarise(summary(Uczniowie..wychow...słuchacze))
aggregate(szkoly_publiczne$Uczniowie..wychow...słuchacze, by=list(Klasa.wielk.))
aggregate(szkoly_publiczne$Uczniowie..wychow...słuchacze, by=list(Klasa.wielk.), summary)
aggregate(szkoly_publiczne$Uczniowie..wychow...słuchacze,
by=list(szkoly_publiczne$Klasa.wielk.), summary)
aggregate(szkoly_publiczne$Uczniowie..wychow...słuchacze,
by=list(szkoly_publiczne$Klasa.wielk.),
function(x) quantile(x, c(0.05, 0.1,0.5, 0.9, 0.95)))
aggregate(szkoly_publiczne$Uczniowie..wychow...słuchacze,
by=list(szkoly_publiczne$Klasa.wielk.),
function(x) quantile(x, c(0.05, 0.15, 0.5, 0.85, 0.95)))
